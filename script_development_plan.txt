✅ 1. setup/install_dependencies.py
Проверка и установка curl, apt-transport-https, containerd, kubeadm, kubelet, kubectl.

Если etcd не найден — скачиваем бинарник (можно curl с официального GitHub релиза).

Используй apt-mark hold после установки kube* пакетов, чтобы не обновлялись случайно.

✅ 2. setup/check_binaries.py
Проверка:

which etcd, kubeadm, kubelet, containerd

Проверка версий, если надо (--version)

Если не найдено — лог + ошибка или предложение установить

✅ 3. systemd/generate_etcd_service.py
Генерация и установка systemd юнита для etcd (/etc/systemd/system/etcd.service)

Автозапуск: systemctl daemon-reexec && systemctl enable --now etcd

Проверка: ss -lntp | grep 2379

✅ 4. kubeadm/create_certificates.py
Используй cfssl или openssl для генерации CA и client сертификатов.

Сохраняй в /etc/kubernetes/pki/etcd/

Проверь: все ли сертификаты есть (ca.crt, cert, key)

✅ 5. kubeadm/generate_kubeadm_config.py
Генерируй kubeadm-config.yaml:

externalEtcd с путями до caFile, certFile, keyFile

podSubnet, serviceSubnet, apiServerCertSANs

controlPlaneEndpoint (если нужно)

✅ 6. kubeadm/run_kubeadm_init.py
Запускай kubeadm init --config kubeadm-config.yaml

Проверь kubeconfig и скопируй в $HOME/.kube/config

✅ 7. post/apply_cni.py
Автоматическая установка Flannel или Cilium (лучше Cilium через Helm или манифест)

Проверка подов CNI: kubectl get pods -n kube-system -w

✅ 8. post/patch_controller_flags.py
Добавление нужных флагов в kube-controller-manager, scheduler и пр.

Проверка флагов (можно kubectl -n kube-system get pod -o yaml | grep command:)

✅ 9. post/join_nodes.py
Парсинг kubeadm token create --print-join-command

Запись в файл join_command.sh или генерация YAML-файла

✅ 10. collect_node_info.py
IP-адрес, CIDR, hostname, платформа, арх

Сохраняй в collected_info.json

✅ 11. utils/
logger.py: цветной логгер (colorama или ANSI), уровни: INFO/WARN/ERROR

shell.py: безопасный subprocess.run() с логированием

validator.py: проверка конфигов, путей, прав

✅ 12. main.py
Читает collected_info.json

Оркестрирует весь пайплайн

Логгирует шаги и ошибки

Может принимать аргументы (--step 1, --only-setup)
